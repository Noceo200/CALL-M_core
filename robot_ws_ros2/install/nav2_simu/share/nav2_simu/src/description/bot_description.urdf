<?xml version="1.0"?>
<robot name="bot" xmlns:xacro="http://ros.org/wiki/xacro">

	<!-- Define robot constants -->
	<xacro:property name="square1_length" value="0.48"/>
	<xacro:property name="square1_height" value="0.03"/> 
	<xacro:property name="square2_length" value="0.27"/>
	<xacro:property name="square2_height" value="0.12"/> 
	<xacro:property name="square3_height" value="0.36"/>

	<xacro:property name="wheels_radius" value="0.05"/> 
	<xacro:property name="triangle_lenght" value="0.32"/> <!-- Side's Triangle length-->
	<xacro:property name="wheels_distance" value="${sqrt(((3*(triangle_lenght**4))/16)+((triangle_lenght**2)/4))}"/> <!-- Radius between origin and wheels-->
	<xacro:property name="wheels_zoffset" value="0.02"/>

	<!-- Define some commonly used intertial properties  -->
	<xacro:macro name="box_inertia" params="m w h d">
		<inertial>
		<origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>      
		<mass value="${m}"/>
		<inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
		</inertial>
	</xacro:macro>

	<xacro:macro name="cylinder_inertia" params="m r h">
		<inertial>
		<origin xyz="0 0 0" rpy="${pi/2} 0 0" />      
		<mass value="${m}"/>
		<inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/> 
		</inertial>
	</xacro:macro>

	<xacro:macro name="sphere_inertia" params="m r">
		<inertial>
		<mass value="${m}"/>
		<inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
		</inertial>
	</xacro:macro>

	<!-- Robot Base -->
	<link name="base_link">
		<visual>
		<geometry>
			<box size="${square1_length} ${square1_length} ${square1_height}"/>
		</geometry>
		<material name="Cyan">
			<color rgba="0 1.0 1.0 1.0"/>
		</material>
		</visual>
		<collision>
		<geometry>
			<box size="${square1_length} ${square1_length} ${square1_height}"/>
		</geometry>
		</collision>
		<xacro:box_inertia m="15" w="${square1_length}" d="${square1_length}" h="${square1_height}"/>
	</link>


	<!-- Others Robot structures -->
	<link name="base2_link">
		<visual>
		<geometry>
			<box size="${square2_length} ${square2_length} ${square2_height}"/>
		</geometry>
		<material name="Cyan">
			<color rgba="0 1.0 1.0 1.0"/>
		</material>
		</visual>
		<collision>
		<geometry>
			<box size="${square2_length} ${square2_length} ${square2_height*0.5}"/>
		</geometry>
		</collision>
		<xacro:box_inertia m="10" w="${square2_length}" d="${square2_length}" h="${square2_height}"/>
	</link>
	<joint name="$base2_joint" type="fixed">
		<parent link="base_link"/>
		<child link="base2_link"/>
		<origin xyz="0.0 0.0 ${(square1_height/2)+(square2_height/2)}" rpy="0 0 0"/>
	</joint>

	<link name="base3_link">
		<visual>
		<geometry>
			<box size="${square1_length} ${square1_length} ${square3_height}"/>
		</geometry>
		<material name="Cyan">
			<color rgba="0 1.0 1.0 1.0"/>
		</material>
		</visual>
		<collision>
		<geometry>
			<box size="${square1_length} ${square1_length} ${square3_height}"/>
		</geometry>
		</collision>
		<xacro:box_inertia m="5" w="${square1_length}" d="${square1_length}" h="${square3_height}"/>
	</link>
	<joint name="$base3_joint" type="fixed">
		<parent link="base_link"/>
		<child link="base3_link"/>
		<origin xyz="0.0 0.0 ${(square1_height/2)+square2_height+(square3_height/2)}" rpy="0 0 0"/>
	</joint>

	<!-- Robot Footprint-->
	<link name="base_footprint">
		<xacro:box_inertia m="0" w="0" d="0" h="0"/>
	</link>

	<joint name="base_joint" type="fixed">
		<parent link="base_link"/>
		<child link="base_footprint"/>
		<origin xyz="0.0 0.0 ${-(wheels_radius+wheels_zoffset+square1_height/2)}" rpy="0 0 0"/>
	</joint>

	  <!-- 3 Wheels and there support to simulate sphere joint -->
	<xacro:macro name="wheel" params="prefix angle">
		<link name="${prefix}_sup_link">
		<visual>
			<geometry>
				<cylinder radius="${wheels_radius}" length="${wheels_zoffset}"/>
			</geometry>
			<material name="Gray">
			<color rgba="0.5 0.5 0.5 1.0"/>
			</material>
		</visual>
		<collision>
			<geometry>
			<cylinder radius="${wheels_radius}" length="${wheels_zoffset/2}"/>
			</geometry>
		</collision>
		<xacro:cylinder_inertia m="0.1" r="${wheels_radius}" h="${wheels_zoffset}"/>
		</link>
		<joint name="${prefix}_sup_joint" type="continuous">
			<parent link="base_link"/>
			<child link="${prefix}_sup_link"/>
			<origin xyz="${wheels_distance*cos(angle)} ${wheels_distance*sin(angle)} ${-((wheels_zoffset/2)+(square1_height/2))}" rpy="0 0 0"/>
			<axis xyz="0 0 1"/>
		</joint>
		<link name="${prefix}_link">
		<visual>
			<geometry>
				<sphere radius="${wheels_radius}"/>
			</geometry>
			<material name="Gray">
			<color rgba="0.5 0.5 0.5 1.0"/>
			</material>
		</visual>

		</link>
		<joint name="${prefix}_joint" type="continuous">
			<parent link="${prefix}_sup_link"/>
			<child link="${prefix}_link"/>
			<origin xyz="0.0 0.0 ${-wheels_radius-wheels_zoffset/2}" rpy="0 0 0"/>
			<axis xyz="0 1 0"/>
		</joint>
	</xacro:macro>

	<xacro:wheel prefix="wheel_f" angle="0.0" />
	<xacro:wheel prefix="wheel_bl" angle="${2*pi/3}" />
	<xacro:wheel prefix="wheel_br" angle="${-2*pi/3}" />

	<!--2 LIDAR-->
	<xacro:macro name="lidar" params="prefix x y">
		<link name="${prefix}_link">
			<inertial>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<mass value="0.125"/>
			<inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
			</inertial>

			<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<cylinder radius="0.0508" length="0.055"/>
			</geometry>
			</collision>

			<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<cylinder radius="0.0508" length="0.055"/>
			</geometry>
			</visual>
		</link>
			
		<joint name="${prefix}_joint" type="fixed">
			<parent link="base_link"/>
			<child link="${prefix}_link"/>
			<origin xyz="${x} ${y} ${square1_height/2+0.055/2}" rpy="0 0 0"/>
		</joint>
			
		<gazebo reference="${prefix}_link">
			<sensor name="${prefix}" type="ray">
			<always_on>true</always_on>
			<visualize>true</visualize>
			<update_rate>5</update_rate>
			<ray>
				<scan>
				<horizontal>
					<samples>360</samples>
					<resolution>1.000000</resolution>
					<min_angle>0.000000</min_angle>
					<max_angle>6.280000</max_angle>
				</horizontal>
				</scan>
				<range>
				<min>0.120000</min>
				<max>3.5</max>
				<resolution>0.015000</resolution>
				</range>
				<noise>
				<type>gaussian</type>
				<mean>0.0</mean>
				<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
				<ros>
				<remapping>~/out:=scan</remapping>
				</ros>
				<output_type>sensor_msgs/LaserScan</output_type>
				<frame_name>${prefix}_link</frame_name>
			</plugin>
			</sensor>
		</gazebo>
	</xacro:macro>

	<xacro:lidar prefix="lidar1" x="${(square1_length/2)-0.0508}" y="${(square1_length/2)-0.0508}" />
	<xacro:lidar prefix="lidar2" x="${-((square1_length/2)-0.0508)}" y="${-((square1_length/2)-0.0508)}" />

</robot>
