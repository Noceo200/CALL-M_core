<?xml version="1.0" encoding="UTF-8"?>
<testsuite
  name="c_pkg.uncrustify"
  tests="1"
  failures="1"
  errors="0"
  time="0.013"
>
  <testcase
    name="src/keyboard_control.cpp"
    classname="c_pkg.uncrustify"
  >
      <failure message="Diff with 47 lines"><![CDATA[--- src/keyboard_control.cpp
+++ src/keyboard_control.cpp.uncrustify
@@ -8 +8 @@
-class Keyboard_control:public rclcpp::Node
+class Keyboard_control : public rclcpp::Node
@@ -10,8 +10,9 @@
-    public:
-        Keyboard_control():Node("keyboard_control_node")
-        {
-            //create pubisher that will publish message of type [vx,vy,w]
-            publisher_ = this->create_publisher<std_msgs::msg::Float64MultiArray>("bot_command", 10);
-            //create timer that will call repetitively the function timer_callback
-            timer_ = this->create_wall_timer(500ms, std::bind(&Keyboard_control::timer_callback, this));
-        } 
+public:
+  Keyboard_control()
+  : Node("keyboard_control_node")
+  {
+    //create pubisher that will publish message of type [vx,vy,w]
+    publisher_ = this->create_publisher<std_msgs::msg::Float64MultiArray>("bot_command", 10);
+    //create timer that will call repetitively the function timer_callback
+    timer_ = this->create_wall_timer(500ms, std::bind(&Keyboard_control::timer_callback, this));
+  }
@@ -19,10 +20,10 @@
-    private:
-        //global variables    
-        rclcpp::TimerBase::SharedPtr timer_;
-        rclcpp::Publisher<std_msgs::msg::Float64MultiArray>::SharedPtr publisher_;
-        
-        //Functions
-        void timer_callback()
-        {
-            printf("ok\n");
-        }
+private:
+  //global variables
+  rclcpp::TimerBase::SharedPtr timer_;
+  rclcpp::Publisher<std_msgs::msg::Float64MultiArray>::SharedPtr publisher_;
+
+  //Functions
+  void timer_callback()
+  {
+    printf("ok\n");
+  }
@@ -38 +39 @@
-}+}
]]></failure>
  </testcase>
  <system-out>Checked files:
* src/keyboard_control.cpp</system-out>
</testsuite>
